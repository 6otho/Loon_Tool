// Loon 脚本格式

// 定义请求体和响应体处理函数
function modifyResponse(response) {
  let regex = '</title>';
  let replace_str = '</title>\
  <link rel="stylesheet" href="https://limbopro.com/CSS/Adblock4limbo.user.css" type="text/css" />\
  <script type="text/javascript" async="async" src="https://limbopro.com/Adguard/Adblock4limbo.user.js"></script>\
  ';
  
  let url = response.url;
  let url_target_regex = /(missav|netflav)/g;
  let url_target = url.match(url_target_regex);

  if (response.body) {  // 判断响应体是否存在
    let body = response.body;
    if (url_target) {  // 判断该URL是否匹配目标
      let window_open_reg = /window.open/g; // 匹配
      let window_open_str = ''; // 替换为空
      body = body.replaceAll('</TITLE>', '</title>').replaceAll(regex, replace_str).replace(window_open_reg, window_open_str);
    } else {
      body = body.replaceAll('</TITLE>', '</title>').replaceAll(regex, replace_str);
    }

    // 修改响应头
    let headers = response.headers;
    headers['Content-Security-Policy'] = '*';

    // 返回修改后的响应体和响应头
    return { headers: headers, body: body, url: url };
  }
  return response;
}

// 请求和响应处理器
const requestHandler = (request) => {
  return request;
};

const responseHandler = (response) => {
  return modifyResponse(response);
};

// 注册请求和响应处理器
$httpClient.requestHandler = requestHandler;
$httpClient.responseHandler = responseHandler;
